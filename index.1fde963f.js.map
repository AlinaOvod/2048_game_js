{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/scripts/grid.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","src/scripts/cell.js","src/scripts/tile.js"],"sourcesContent":["(function () {\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\n\nvar $cb39967b882bcef3$export$f6f0c3fe4ec306ea = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Cell(gridElement, x, y, grid) {\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Cell);\n        var cell = document.createElement(\"div\");\n        cell.classList.add(\"field-cell\");\n        gridElement.append(cell);\n        this.x = x;\n        this.y = y;\n        this.grid = grid;\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Cell, [\n        {\n            key: \"linkTile\",\n            value: function linkTile(tile) {\n                tile.setXY(this.x, this.y);\n                this.linkedTile = tile;\n            }\n        },\n        {\n            key: \"unlinkTile\",\n            value: function unlinkTile() {\n                this.linkedTile = null;\n            }\n        },\n        {\n            key: \"isEmpty\",\n            value: function isEmpty() {\n                return !this.linkedTile;\n            }\n        },\n        {\n            key: \"linkTileForMerge\",\n            value: function linkTileForMerge(tile) {\n                tile.setXY(this.x, this.y);\n                this.linkedTileForMerge = tile;\n            }\n        },\n        {\n            key: \"unlinkTileForMerge\",\n            value: function unlinkTileForMerge() {\n                this.linkedTileForMerge = null;\n            }\n        },\n        {\n            key: \"hasTileForMerge\",\n            value: function hasTileForMerge() {\n                return !!this.linkedTileForMerge;\n            }\n        },\n        {\n            key: \"canAccept\",\n            value: function canAccept(newTile) {\n                return this.isEmpty() || !this.hasTileForMerge() && this.linkedTile.value === newTile.value;\n            }\n        },\n        {\n            key: \"mergeTiles\",\n            value: function mergeTiles() {\n                var mergedValue = this.linkedTile.value + this.linkedTileForMerge.value;\n                this.linkedTile.setValue(mergedValue);\n                this.linkedTileForMerge.removeFromDOM();\n                this.unlinkTileForMerge();\n                var score = mergedValue;\n                this.grid.updateTotalScore(score);\n                return this.score += score;\n            }\n        }\n    ]);\n    return Cell;\n}();\n\n\n\n\nvar $d86fe4bf8dbcb6bf$export$235cb65c20ad2b7 = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Tile(gridElement) {\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Tile);\n        this.tileElement = document.createElement(\"div\");\n        this.tileElement.classList.add(\"field-tile\");\n        this.setValue(Math.random() > 0.1 ? 2 : 4);\n        gridElement.append(this.tileElement);\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Tile, [\n        {\n            key: \"setXY\",\n            value: function setXY(x, y) {\n                this.x = x;\n                this.y = y;\n                this.tileElement.style.setProperty(\"--x\", x);\n                this.tileElement.style.setProperty(\"--y\", y);\n            }\n        },\n        {\n            key: \"setValue\",\n            value: function setValue(value) {\n                this.value = value;\n                this.tileElement.textContent = value;\n                var bgLightness = 100 - Math.log2(value) * 8;\n                this.tileElement.style.setProperty(\"--bg-lightness\", \"\".concat(bgLightness, \"%\"));\n                this.tileElement.style.setProperty(\"--text-lightness\", \"\".concat(bgLightness < 60 ? 100 : 30, \"%\"));\n            }\n        },\n        {\n            key: \"removeFromDOM\",\n            value: function removeFromDOM() {\n                this.tileElement.remove();\n            }\n        }\n    ]);\n    return Tile;\n}();\n\n\nvar $5ee1dc75bda47f01$var$GRID_SIZE = 4;\nvar $5ee1dc75bda47f01$var$CELLS_COUNT = $5ee1dc75bda47f01$var$GRID_SIZE * $5ee1dc75bda47f01$var$GRID_SIZE;\nvar $5ee1dc75bda47f01$export$ef2184bd89960b14 = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Grid(gridElement) {\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Grid);\n        this.cells = [];\n        this.totalScore = 0;\n        for(var i = 0; i < $5ee1dc75bda47f01$var$CELLS_COUNT; i++)this.cells.push(new (0, $cb39967b882bcef3$export$f6f0c3fe4ec306ea)(gridElement, i % $5ee1dc75bda47f01$var$GRID_SIZE, Math.floor(i / $5ee1dc75bda47f01$var$GRID_SIZE), this));\n        this.cellsGroupedByColumn = this.groupCellsByColumn();\n        this.cellsGroupedByReversedColumn = this.cellsGroupedByColumn.map(function(column) {\n            return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(column).reverse();\n        });\n        this.cellsGroupedByRow = this.groupCellsByRow();\n        this.cellsGroupedByReversedRow = this.cellsGroupedByRow.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row).reverse();\n        });\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Grid, [\n        {\n            key: \"getRandomEmptyCell\",\n            value: function getRandomEmptyCell() {\n                var emptyCells = this.cells.filter(function(cell) {\n                    return cell.isEmpty();\n                });\n                var randomIndex = Math.floor(Math.random() * emptyCells.length);\n                return emptyCells[randomIndex];\n            }\n        },\n        {\n            key: \"groupCellsByColumn\",\n            value: function groupCellsByColumn() {\n                return this.cells.reduce(function(groupedCells, cell) {\n                    groupedCells[cell.x] = groupedCells[cell.x] || [];\n                    groupedCells[cell.x][cell.y] = cell;\n                    return groupedCells;\n                }, []);\n            }\n        },\n        {\n            key: \"groupCellsByRow\",\n            value: function groupCellsByRow() {\n                return this.cells.reduce(function(groupedCells, cell) {\n                    groupedCells[cell.y] = groupedCells[cell.y] || [];\n                    groupedCells[cell.y][cell.x] = cell;\n                    return groupedCells;\n                }, []);\n            }\n        },\n        {\n            key: \"reset\",\n            value: function reset() {\n                this.cells.forEach(function(cell) {\n                    if (!cell.isEmpty()) {\n                        cell.linkedTile.removeFromDOM();\n                        cell.unlinkTile();\n                    }\n                });\n            }\n        },\n        {\n            key: \"updateTotalScore\",\n            value: function updateTotalScore(score) {\n                this.lastMerge = score;\n                this.totalScore += score;\n            }\n        }\n    ]);\n    return Grid;\n}();\n\n\n\nvar $197cd56b15c33885$var$button = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$gameBoard = document.getElementById(\"game-board\");\nvar $197cd56b15c33885$var$grid = new (0, $5ee1dc75bda47f01$export$ef2184bd89960b14)($197cd56b15c33885$var$gameBoard);\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageRestart = document.querySelector(\".message-restart\");\nvar $197cd56b15c33885$var$gameScore = document.querySelector(\".game-score\");\n$197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$button.classList.contains(\"restart\")) $197cd56b15c33885$var$restartGame();\n    else {\n        $197cd56b15c33885$var$button.classList.remove(\"start\");\n        $197cd56b15c33885$var$button.classList.add(\"restart\");\n        $197cd56b15c33885$var$button.innerHTML = \"Restart\";\n        $197cd56b15c33885$var$restartGame();\n        $197cd56b15c33885$var$messageRestart.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n    }\n});\nfunction $197cd56b15c33885$var$setupInputOnce() {\n    window.addEventListener(\"keydown\", $197cd56b15c33885$var$handleInput, {\n        once: true\n    });\n}\nfunction $197cd56b15c33885$var$handleInput(event) {\n    switch(event.key){\n        case \"ArrowUp\":\n            if (!$197cd56b15c33885$var$canMoveUp()) {\n                $197cd56b15c33885$var$setupInputOnce();\n                return;\n            }\n            $197cd56b15c33885$var$moveUp();\n            break;\n        case \"ArrowDown\":\n            if (!$197cd56b15c33885$var$canMoveDown()) {\n                $197cd56b15c33885$var$setupInputOnce();\n                return;\n            }\n            $197cd56b15c33885$var$moveDown();\n            break;\n        case \"ArrowLeft\":\n            if (!$197cd56b15c33885$var$canMoveLeft()) {\n                $197cd56b15c33885$var$setupInputOnce();\n                return;\n            }\n            $197cd56b15c33885$var$moveLeft();\n            break;\n        case \"ArrowRight\":\n            if (!$197cd56b15c33885$var$canMoveRight()) {\n                $197cd56b15c33885$var$setupInputOnce();\n                return;\n            }\n            $197cd56b15c33885$var$moveRight();\n            break;\n        default:\n            $197cd56b15c33885$var$setupInputOnce();\n            return;\n    }\n    var newTile = new (0, $d86fe4bf8dbcb6bf$export$235cb65c20ad2b7)($197cd56b15c33885$var$gameBoard);\n    $197cd56b15c33885$var$grid.getRandomEmptyCell().linkTile(newTile);\n    if (!$197cd56b15c33885$var$canMoveUp() && !$197cd56b15c33885$var$canMoveDown() && !$197cd56b15c33885$var$canMoveLeft() && !$197cd56b15c33885$var$canMoveRight()) {\n        $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageRestart.classList.add(\"hidden\");\n    }\n    $197cd56b15c33885$var$setupInputOnce();\n}\nfunction $197cd56b15c33885$var$moveUp() {\n    $197cd56b15c33885$var$slideTiles($197cd56b15c33885$var$grid.cellsGroupedByColumn);\n    $197cd56b15c33885$var$updateGameScore();\n}\nfunction $197cd56b15c33885$var$moveDown() {\n    $197cd56b15c33885$var$slideTiles($197cd56b15c33885$var$grid.cellsGroupedByReversedColumn);\n    $197cd56b15c33885$var$updateGameScore();\n}\nfunction $197cd56b15c33885$var$moveLeft() {\n    $197cd56b15c33885$var$slideTiles($197cd56b15c33885$var$grid.cellsGroupedByRow);\n    $197cd56b15c33885$var$updateGameScore();\n}\nfunction $197cd56b15c33885$var$moveRight() {\n    $197cd56b15c33885$var$slideTiles($197cd56b15c33885$var$grid.cellsGroupedByReversedRow);\n    $197cd56b15c33885$var$updateGameScore();\n}\nfunction $197cd56b15c33885$var$slideTiles(groupedCells) {\n    groupedCells.forEach(function(group) {\n        return $197cd56b15c33885$var$slideTilesInGroup(group);\n    });\n    $197cd56b15c33885$var$grid.cells.forEach(function(cell) {\n        cell.hasTileForMerge() && cell.mergeTiles();\n    });\n    $197cd56b15c33885$var$setupInputOnce();\n}\nfunction $197cd56b15c33885$var$slideTilesInGroup(group) {\n    for(var i = 0; i < group.length; i++){\n        if (group[i].isEmpty()) continue;\n        var cellWithTile = group[i];\n        var targetCell = void 0;\n        var j = i - 1;\n        while(j >= 0 && group[j].canAccept(cellWithTile.linkedTile)){\n            targetCell = group[j];\n            j--;\n        }\n        if (!targetCell) continue;\n        if (targetCell.isEmpty()) targetCell.linkTile(cellWithTile.linkedTile);\n        else targetCell.linkTileForMerge(cellWithTile.linkedTile);\n        cellWithTile.unlinkTile();\n    }\n}\nfunction $197cd56b15c33885$var$canMoveUp() {\n    return $197cd56b15c33885$var$canMove($197cd56b15c33885$var$grid.cellsGroupedByColumn);\n}\nfunction $197cd56b15c33885$var$canMoveDown() {\n    return $197cd56b15c33885$var$canMove($197cd56b15c33885$var$grid.cellsGroupedByReversedColumn);\n}\nfunction $197cd56b15c33885$var$canMoveLeft() {\n    return $197cd56b15c33885$var$canMove($197cd56b15c33885$var$grid.cellsGroupedByRow);\n}\nfunction $197cd56b15c33885$var$canMoveRight() {\n    return $197cd56b15c33885$var$canMove($197cd56b15c33885$var$grid.cellsGroupedByReversedRow);\n}\nfunction $197cd56b15c33885$var$canMove(groupedCells) {\n    return groupedCells.some(function(group) {\n        return $197cd56b15c33885$var$canMoveInGroup(group);\n    });\n}\nfunction $197cd56b15c33885$var$canMoveInGroup(group) {\n    return group.some(function(cell, index) {\n        if (index === 0) return false;\n        if (cell.isEmpty()) return false;\n        var targetCell = group[index - 1];\n        return targetCell.canAccept(cell.linkedTile);\n    });\n}\nfunction $197cd56b15c33885$var$updateGameScore() {\n    $197cd56b15c33885$var$gameScore.textContent = $197cd56b15c33885$var$grid.totalScore;\n    if ($197cd56b15c33885$var$grid.lastMerge === 2048) {\n        $197cd56b15c33885$var$messageRestart.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n    }\n}\nfunction $197cd56b15c33885$var$restartGame() {\n    $197cd56b15c33885$var$grid.reset();\n    $197cd56b15c33885$var$grid.totalScore = 0;\n    $197cd56b15c33885$var$gameScore.textContent = $197cd56b15c33885$var$grid.totalScore;\n    $197cd56b15c33885$var$grid.getRandomEmptyCell().linkTile(new (0, $d86fe4bf8dbcb6bf$export$235cb65c20ad2b7)($197cd56b15c33885$var$gameBoard));\n    $197cd56b15c33885$var$grid.getRandomEmptyCell().linkTile(new (0, $d86fe4bf8dbcb6bf$export$235cb65c20ad2b7)($197cd56b15c33885$var$gameBoard));\n    $197cd56b15c33885$var$messageRestart.classList.remove(\"hidden\");\n    $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    if (!$197cd56b15c33885$var$messageWin.classList.contains(\"hidden\")) $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n    $197cd56b15c33885$var$setupInputOnce();\n}\n\n})();\n//# sourceMappingURL=index.1fde963f.js.map\n","import { Grid } from './grid.js';\nimport { Tile } from './tile.js';\n\nconst button = document.querySelector('.button');\nconst gameBoard = document.getElementById('game-board');\nconst grid = new Grid(gameBoard);\n\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst messageStart = document.querySelector('.message-start');\nconst messageRestart = document.querySelector('.message-restart');\n\nconst gameScore = document.querySelector('.game-score');\n\nbutton.addEventListener('click', () => {\n  if (button.classList.contains('restart')) {\n\n    restartGame();\n  } else {\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.innerHTML = 'Restart';\n\n    restartGame();\n\n    messageRestart.classList.remove('hidden');\n    messageStart.classList.add('hidden');\n  }\n});\n\nfunction setupInputOnce() {\n  window.addEventListener('keydown', handleInput, {once: true});\n}\n\nfunction handleInput(event) {\n  switch (event.key) {\n    case 'ArrowUp':\n      if(!canMoveUp()) {\n        setupInputOnce();\n        return;\n      }\n      moveUp();\n      break;\n\n    case 'ArrowDown':\n      if(!canMoveDown()) {\n        setupInputOnce();\n        return;\n      }\n      moveDown();\n      break;\n\n    case 'ArrowLeft':\n      if(!canMoveLeft()) {\n        setupInputOnce();\n        return;\n      }\n      moveLeft();\n      break;\n\n    case 'ArrowRight':\n      if(!canMoveRight()) {\n        setupInputOnce();\n        return;\n      }\n      moveRight();\n      break;\n\n    default:\n      setupInputOnce();\n      return;\n  }\n\n  const newTile = new Tile(gameBoard);\n  grid.getRandomEmptyCell().linkTile(newTile);\n\n  if (!canMoveUp() && !canMoveDown() && !canMoveLeft() && !canMoveRight()) {\n    messageLose.classList.remove('hidden');\n    messageStart.classList.add('hidden');\n    messageRestart.classList.add('hidden');\n  }\n\n  setupInputOnce();\n}\n\nfunction moveUp() {\n  slideTiles(grid.cellsGroupedByColumn);\n  updateGameScore();\n}\n\nfunction moveDown() {\n  slideTiles(grid.cellsGroupedByReversedColumn);\n  updateGameScore();\n}\n\nfunction moveLeft() {\n  slideTiles(grid.cellsGroupedByRow);\n  updateGameScore();\n}\n\nfunction moveRight() {\n  slideTiles(grid.cellsGroupedByReversedRow);\n  updateGameScore();\n}\n\nfunction slideTiles(groupedCells) {\n  groupedCells.forEach(group => slideTilesInGroup(group));\n\n  grid.cells.forEach(cell => {\n    cell.hasTileForMerge() && cell.mergeTiles();\n  });\n\n  setupInputOnce();\n}\n\nfunction slideTilesInGroup(group) {\n  for (let i = 0; i < group.length; i++) {\n    if (group[i].isEmpty()) {\n      continue;\n    }\n\n    const cellWithTile = group[i];\n\n    let targetCell;\n    let j = i - 1;\n    while(j >= 0 && group[j].canAccept(cellWithTile.linkedTile)) {\n      targetCell = group[j];\n      j--;\n    }\n\n    if (!targetCell) {\n      continue;\n    }\n\n    if (targetCell.isEmpty()) {\n      targetCell.linkTile(cellWithTile.linkedTile);\n    } else {\n      targetCell.linkTileForMerge(cellWithTile.linkedTile);\n    }\n\n    cellWithTile.unlinkTile();\n  }\n}\n\nfunction canMoveUp() {\n  return canMove(grid.cellsGroupedByColumn);\n}\n\nfunction canMoveDown() {\n  return canMove(grid.cellsGroupedByReversedColumn);\n}\n\nfunction canMoveLeft() {\n  return canMove(grid.cellsGroupedByRow);\n}\n\nfunction canMoveRight() {\n  return canMove(grid.cellsGroupedByReversedRow);\n}\n\nfunction canMove(groupedCells) {\n  return groupedCells.some(group => canMoveInGroup(group));\n}\n\nfunction canMoveInGroup(group) {\n  return group.some((cell, index) => {\n    if (index === 0)  {\n      return false;\n    }\n\n    if (cell.isEmpty()) {\n      return false;\n    }\n\n    const targetCell = group[index - 1];\n    return targetCell.canAccept(cell.linkedTile);\n  })\n}\n\nfunction updateGameScore() {\n  gameScore.textContent = grid.totalScore;\n\n  if (grid.lastMerge === 2048) {\n    messageRestart.classList.add('hidden');\n    messageWin.classList.remove('hidden');\n  }\n}\n\nfunction restartGame() {\n  grid.reset();\n  grid.totalScore = 0;\n  gameScore.textContent = grid.totalScore;\n\n  grid.getRandomEmptyCell().linkTile(new Tile(gameBoard));\n  grid.getRandomEmptyCell().linkTile(new Tile(gameBoard));\n\n  messageRestart.classList.remove('hidden');\n  messageLose.classList.add('hidden');\n\n  if (!messageWin.classList.contains('hidden')) {\n    messageWin.classList.add ('hidden');\n  };\n\n  setupInputOnce();\n}\n","import { Cell } from './cell.js';\nimport { Tile } from './tile.js';\n\nconst GRID_SIZE = 4;\nconst CELLS_COUNT = GRID_SIZE * GRID_SIZE;\n\nexport class Grid {\n  constructor(gridElement) {\n    this.cells = [];\n    this.totalScore = 0;\n\n    for (let i = 0; i < CELLS_COUNT; i++) {\n      this.cells.push(\n        new Cell(gridElement, i % GRID_SIZE, Math.floor(i / GRID_SIZE), this)\n      );\n    }\n\n    this.cellsGroupedByColumn = this.groupCellsByColumn();\n    this.cellsGroupedByReversedColumn = this.cellsGroupedByColumn.map(column => [...column].reverse());\n\n    this.cellsGroupedByRow = this.groupCellsByRow();\n    this.cellsGroupedByReversedRow = this.cellsGroupedByRow.map(row => [...row].reverse());\n  }\n\n  getRandomEmptyCell() {\n    const emptyCells = this.cells.filter(cell => cell.isEmpty());\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\n    return emptyCells[randomIndex];\n  }\n\n  groupCellsByColumn() {\n    return this.cells.reduce((groupedCells, cell) => {\n      groupedCells[cell.x] = groupedCells[cell.x] || [];\n      groupedCells[cell.x][cell.y] = cell;\n      return groupedCells;\n    }, [])\n  }\n\n  groupCellsByRow() {\n    return this.cells.reduce((groupedCells, cell) => {\n      groupedCells[cell.y] = groupedCells[cell.y] || [];\n      groupedCells[cell.y][cell.x] = cell;\n      return groupedCells;\n    }, [])\n  }\n\n  reset() {\n    this.cells.forEach(cell => {\n      if (!cell.isEmpty()) {\n        cell.linkedTile.removeFromDOM();\n        cell.unlinkTile();\n      }\n    });\n  }\n\n  updateTotalScore(score) {\n    this.lastMerge = score;\n    this.totalScore += score;\n  }\n}\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","export class Cell {\n  constructor(gridElement, x, y, grid) {\n    const cell = document.createElement('div');\n\n    cell.classList.add('field-cell');\n    gridElement.append(cell);\n    this.x = x;\n    this.y = y;\n    this.grid = grid;\n  }\n\n  linkTile(tile) {\n    tile.setXY(this.x, this.y);\n    this.linkedTile = tile;\n  }\n\n  unlinkTile() {\n    this.linkedTile = null;\n  }\n\n  isEmpty() {\n    return !this.linkedTile;\n  }\n\n  linkTileForMerge(tile) {\n    tile.setXY(this.x, this.y);\n    this.linkedTileForMerge = tile;\n  }\n\n  unlinkTileForMerge() {\n    this.linkedTileForMerge = null;\n  }\n\n  hasTileForMerge() {\n    return !!this.linkedTileForMerge;\n  }\n\n  canAccept(newTile) {\n    return this.isEmpty() || (!this.hasTileForMerge() && this.linkedTile.value === newTile.value)\n  }\n\n  mergeTiles() {\n    const mergedValue = this.linkedTile.value + this.linkedTileForMerge.value;\n    this.linkedTile.setValue(mergedValue);\n\n    this.linkedTileForMerge.removeFromDOM();\n    this.unlinkTileForMerge();\n\n    const score = mergedValue;\n    this.grid.updateTotalScore(score);\n\n    return this.score += score;\n  }\n}\n","export class Tile {\n  constructor(gridElement) {\n    this.tileElement = document.createElement('div');\n    this.tileElement.classList.add('field-tile');\n    this.setValue(Math.random() > 0.1 ? 2 : 4);\n    gridElement.append(this.tileElement);\n  }\n\n  setXY(x, y) {\n    this.x = x;\n    this.y = y;\n\n    this.tileElement.style.setProperty('--x', x);\n    this.tileElement.style.setProperty('--y', y);\n  }\n\n  setValue(value) {\n    this.value = value;\n    this.tileElement.textContent = value;\n    const bgLightness = 100 - Math.log2(value) * 8;\n    this.tileElement.style.setProperty('--bg-lightness', `${bgLightness}%`);\n    this.tileElement.style.setProperty('--text-lightness', `${bgLightness < 60 ? 100 : 30}%`)\n  }\n\n  removeFromDOM() {\n    this.tileElement.remove();\n  }\n}\n"],"names":["$8713978b2328d32b$export$2996f80ef42b8419","instance","Constructor","TypeError","$4fc75ccb937ab1df$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$4fc75ccb937ab1df$export$d60067ff2358eee8","protoProps","staticProps","prototype","$c3b10a83b523f372$export$79e617b1955a2616","arr","len","arr2","Array","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","from","o","minLen","n","toString","call","slice","constructor","name","test","$cb39967b882bcef3$export$f6f0c3fe4ec306ea","Cell","gridElement","x","y","grid","cell","document","createElement","classList","add","append","value","tile","setXY","linkedTile","linkedTileForMerge","newTile","isEmpty","hasTileForMerge","mergedValue","setValue","removeFromDOM","unlinkTileForMerge","updateTotalScore","score","$d86fe4bf8dbcb6bf$export$235cb65c20ad2b7","Tile","tileElement","Math","random","style","setProperty","textContent","bgLightness","log2","concat","remove","$5ee1dc75bda47f01$export$ef2184bd89960b14","Grid","cells","totalScore","$5ee1dc75bda47f01$var$GRID_SIZE","push","floor","cellsGroupedByColumn","groupCellsByColumn","cellsGroupedByReversedColumn","map","column","reverse","cellsGroupedByRow","groupCellsByRow","cellsGroupedByReversedRow","row","emptyCells","filter","randomIndex","reduce","groupedCells","forEach","unlinkTile","lastMerge","$197cd56b15c33885$var$button","querySelector","$197cd56b15c33885$var$gameBoard","getElementById","$197cd56b15c33885$var$grid","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageRestart","$197cd56b15c33885$var$gameScore","$197cd56b15c33885$var$setupInputOnce","window","addEventListener","$197cd56b15c33885$var$handleInput","once","event","$197cd56b15c33885$var$canMoveUp","$197cd56b15c33885$var$slideTiles","$197cd56b15c33885$var$updateGameScore","$197cd56b15c33885$var$canMoveDown","$197cd56b15c33885$var$canMoveLeft","$197cd56b15c33885$var$canMoveRight","getRandomEmptyCell","linkTile","group","$197cd56b15c33885$var$slideTilesInGroup","cellWithTile","targetCell","j","canAccept","linkTileForMerge","mergeTiles","$197cd56b15c33885$var$canMove","some","index","$197cd56b15c33885$var$restartGame","reset","contains","innerHTML"],"version":3,"file":"index.1fde963f.js.map"}